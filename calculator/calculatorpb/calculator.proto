syntax = "proto3";

package calculator;

option go_package = "calculatorpb";

message Sum{
    float first_number = 1;
    float second_number = 2;
}

message SumRequest {
    Sum sum = 1;
}

message SumResponse {
    float result = 1;
}

message PrimeDecompositon {
    int64 number = 1;
}

message AverageComposition {
    double number = 1;
}

message PrimeNumberDecompositionRequest {
    PrimeDecompositon primeDecompositon = 1;
}

message PrimeNumberDecompositionResponse {
    int64 prime_factor = 1;
}

message ComputeAverageRequest{
    AverageComposition averageComposition = 1;
}

message ComputeAverageResponse{
    double average = 1;
}

message FindMaximumRequest {
    int32 number = 1; 
}

message FindMaximumResponse {
    int32 maximum = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double number_root = 1;
}

service CalculatorService {
    // Unary 
    rpc Sum(SumRequest) returns (SumResponse){}

    // Server Streaming
    rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse){};

    // Client Streaming
    rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse){};

    // BiDi Streaming
    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse){};

    // Error handling
    // this RPC will throw an exception if the send number is negative
    // the error being sent is of type INVALID_ARGUMENT
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse){};
}